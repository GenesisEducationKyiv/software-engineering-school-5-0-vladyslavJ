version: '3.8'

services:
  # ---------- DEV ----------
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: weather-api-dev
    env_file: [.env.docker]
    ports: ['3000:3000']
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_healthy
    command: npm run dev
    profiles: ['dev']

  # ---------- PROD ----------
  api-prod:
    build: .
    container_name: weather-api-prod
    env_file: [.env.docker]
    ports: ['3000:3000']
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_healthy
    profiles: ['prod']

  # ---------- TEST ----------
  api-test:
    build: .
    container_name: weather-api-test
    command: npm run test:docker
    env_file: [.env.test.docker]
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_healthy
    tty: true
    stdin_open: true
    volumes:
      - ./:/app
      - /app/node_modules
    profiles: ['test']

  # ---------- COMMON ----------
  db:
    image: postgres:14
    env_file: [.env.docker]
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports: ['${DB_PORT}:5432']
    volumes:
      - db-data:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports: ['${REDIS_PORT}:6379']
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 3s
      retries: 10

volumes:
  db-data:
