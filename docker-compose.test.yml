services:
  tests-int:
    build:
      context: .
      dockerfile: Dockerfile
    command: npm run test:int
    env_file: .env.test.docker
    depends_on:
      postgres-test: { condition: service_healthy }
      redis-test: { condition: service_healthy }

  tests-unit:
    build:
      context: .
      dockerfile: Dockerfile
    command: npm run test:unit

  postgres-test:
    image: postgres:15
    env_file: .env.test.docker
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports: ['5433:5432']
    volumes:
      - postgres-test-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER']
      interval: 10s
      timeout: 5s
      retries: 5

  redis-test:
    image: redis:7
    env_file: .env.test.docker
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_TTL: ${REDIS_TTL}
    ports: ['6380:6379']
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 3s
      retries: 10

volumes:
  postgres-test-data:
